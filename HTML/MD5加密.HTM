<html>
<head>
<title>MD5在线加密 - MD5在线解密 okman.cn</title>
<meta HTTP-EQUIV="Content-Type" content="text/html; charset=gb2312">
<style type="text/css">
body{font-size=12px;}
A{text-transform:none;text-decoration:none;}
A:hover {COLOR: #FF0000; TEXT-DECORATION: underline}
.menu{font-family:宋体;font-size:9pt;color:#5AC9AD}
.menu2{font-family:宋体;font-size:9pt;color:#000000}
.link{font-family:宋体;font-size:9pt;color:#000000}
.white{font-family:宋体;font-size:9pt;color:#FFFFFF}
.text{font-family:宋体;font-size:9pt;color:#000000}
.black{font-family:宋体;font-size:9pt;color:#000000}
.green{font-family:宋体;font-size:9pt;color:#008000}
.gray{font-family:宋体;font-size:9pt;color:#C0C0C0}
.blue{font-family:宋体;font-size:9pt;color:#0000FF}
.red{font-family:宋体;font-size:9pt;color:#FF0000}
.maroon{font-family:宋体;font-size:9pt;color:#840000}
.dategray{font-family:宋体;font-size:8pt;color:#C0C0C0}
.datered{font-family:宋体;font-size:8pt;color:#FF0000}
.input{background-color: #F2FDF9;font-family:宋体;}
.bg_hits{background-image: url('img/bg_hits.gif');background-repeat: repeat-y; background-position: left top;}
.bg_new{background-image: url('img/bg_new.gif');background-repeat: repeat-y; background-position: left top;}
.bg_class{background-image: url('img/bg_class.gif');background-repeat: repeat-y; background-position: left top;}
.bg_list{background-image: url('img/bg_list.gif');background-repeat: repeat-y; background-position: left top;}
.bg_search{background-image: url('img/bg_search.gif');background-repeat: repeat-y; background-position: left top;}
.button{padding:1; color: #000000; border: 1px solid #DBF7EE; background-color: #DBF7EE}
.ok{padding:0; border-style:solid; border-width:0; background-image: url('img/ok.gif');width:57;height:25;}
.reset{padding:0; border-style:solid; border-width:0; background-image: url('img/reset.gif');width:57;height:25;}
.back{padding:0; border-style:solid; border-width:0; background-image: url('img/back.gif');width:57;height:25;}
.send{padding:0; border-style:solid; border-width:0; background-image: url('img/send.gif');width:57;height:25;}
.goon{padding:0; border-style:solid; border-width:0; background-image: url('img/goon.gif');width:57;height:25;}
.del_3{padding:0; border-style:solid; border-width:0; background-image: url('img/del_3.gif');width:57;height:25;}

.search{padding:0; border-style:solid; border-width:0; background-image: url('img/search.gif');width:39;height:24;}
.del_2{padding:0; border-style:solid; border-width:0; background-image: url('img/del_2.gif');width:39;height:24;}
.append{padding:0; border-style:solid; border-width:0; background-image: url('img/append.gif');width:39;height:24;}
.ren{padding:0; border-style:solid; border-width:0; background-image: url('img/ren.gif');width:39;height:24;}
.DEA{font-family:宋体;font-size:9pt;color: #349E84;padding:0; border-style:solid; border-width:0; background-image: url('img/DEA.gif');width:39;height:24;}
.AdminInput{border-left-width: 0; border-right-width: 0; border-top-width: 0; border-bottom-style: solid; border-bottom-width: 1; background-color: #FFFFFF; color:#000000}
</style>
<script language="JavaScript">
<!-- 
Image1= new Image(100,27) 
Image1.src = "img/bg_hits.gif" 
Image2= new Image(100,27) 
Image2.src = "img/bg_new.gif" 
Image3= new Image(100,27) 
Image3.src = "img/bg_class.gif"
Image4= new Image(100,27) 
Image4.src = "img/bg_search.gif"
Image5= new Image(100,27) 
Image5.src = "img/bg_list.gif"
Image6= new Image(100,27) 
Image6.src = "img/title_1.gif"
Image7= new Image(50,22) 
Image7.src = "img/printpage.gif"
Image8= new Image(31,35) 
Image8.src = "img/T_bg.gif"
Image9= new Image(16,16) 
Image9.src = "img/edit.gif"
// --> 
</script>
<SCRIPT language=JavaScript>
function doZoom(size){
 document.getElementById('zoom').style.fontSize=size+'px'
}
function doColor(color){
 document.getElementById('zoom').style.color='#'+color
}
</SCRIPT>

<script language = "JavaScript" src="Inc/chinese.js"></script>

</head>

<body topmargin="0" leftmargin="0">
<center>
  <table border="0" cellpadding="0" cellspacing="1" width="780" height="109" bgcolor="#CEEFE7"> 
    <tr> 
      <td width="780" height="31" align="center" bgcolor="#DBF7EE">　<p>MD5加密<br/>
     　</td> 
    </tr> 
    <tr> 
      <td width="780" height="22" align="right" bgcolor="#EFFBF7">
		<p align="center">MD5加密</td> 
    </tr> 
    <tr> 
      <td width="777" height="89" bgcolor="#EFFBF7" align="center"> 
      <table border="0" cellpadding="5" cellspacing="1" width="509" height="36"> 
    <tr> 
      <td width="497" height="44" class=black><br>
        <FONT id=zoom><!-- MD5 在线加密代码开始 -->
<SCRIPT language=JavaScript>             
<!--  
function CopyText(textid) {  
    var body = document.getElementById(textid);  
    body.select();  
    window.clipboardData.setData('Text',body.value);  
}  
//-->  
</SCRIPT>

<SCRIPT language=VBScript id=ClientEventHandlersVBS>         
<!--  
Sub PasteText  
text.focus  
document.execCommand "Paste"  
End Sub  
//-->  
</SCRIPT>
在下面的表单中输入要加密为 MD5 密文的代码: <BR><INPUT id=test size=69 name=text> <BR><INPUT onclick=ye.value=hex_md5(test.value).substring(8,24) type=button value=MD5_16_a> <INPUT onclick=ye.value=hex_md5(test.value).substring(8,24).toUpperCase() type=button value=MD5_16_A> <INPUT onclick=ye.value=hex_md5(test.value) type=button value=MD5_32_a> <INPUT onclick=ye.value=hex_md5(test.value).toUpperCase() type=button value=MD5_32_A> <INPUT onclick=vbscript:PasteText type=button value=粘贴 name=Button> <INPUT onClick="text.value=''" type=button value=清空 name=Button> <BR><BR>以下表单中的代码是转换后的 MD5 密文: <BR><TEXTAREA id=ye name=MD5Text rows=10 cols=68></TEXTAREA> <BR><INPUT onClick="CopyText('MD5Text');" type=button value=复制密文 name=Button> <INPUT onClick="MD5Text.value=''" type=button value=清空表单 name=Button>
<SCRIPT>                                        
var hexcase = 0;  /* hex output format. 0 - lowercase; 1 - uppercase        */  
var b64pad  = ""; /* base-64 pad character. "=" for strict RFC compliance   */  
var chrsz   = 8;  /* bits per input character. 8 - ASCII; 16 - Unicode      */  

/*  
 * These are the functions you’ll usually want to call  
 * They take string arguments and return either hex or base-64 encoded strings  
 */  
function hex_md5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}  
function b64_md5(s){ return binl2b64(core_md5(str2binl(s), s.length * chrsz));}  
function hex_hmac_md5(key, data) { return binl2hex(core_hmac_md5(key, data)); }  
function b64_hmac_md5(key, data) { return binl2b64(core_hmac_md5(key, data)); }  

/* Backwards compatibility - same as hex_md5() */  
function calcMD5(s){ return binl2hex(core_md5(str2binl(s), s.length * chrsz));}  

/*   
 * Perform a simple self-test to see if the VM is working   
 */  
function md5_vm_test()  
{  
  return hex_md5("abc") == "900150983cd24fb0d6963f7d28e17f72";  
}  

/*  
 * Calculate the MD5 of an array of little-endian words, and a bit length  
 */  
function core_md5(x, len)  
{  
  /* append padding */  
  x[len >> 5] |= 0x80 << ((len) % 32);  
  x[(((len + 64) >>> 9) << 4) + 14] = len;  
    
  var a =  1732584193;  
  var b = -271733879;  
  var c = -1732584194;  
  var d =  271733878;  

  for(var i = 0; i < x.length; i += 16)  
  {  
    var olda = a;  
    var oldb = b;  
    var oldc = c;  
    var oldd = d;  
   
    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);  
    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);  
    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);  
    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);  
    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);  
    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);  
    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);  
    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);  
    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);  
    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);  
    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);  
    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);  
    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);  
    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);  
    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);  
    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);  

    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);  
    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);  
    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);  
    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);  
    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);  
    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);  
    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);  
    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);  
    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);  
    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);  
    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);  
    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);  
    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);  
    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);  
    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);  
    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);  

    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);  
    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);  
    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);  
    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);  
    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);  
    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);  
    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);  
    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);  
    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);  
    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);  
    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);  
    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);  
    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);  
    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);  
    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);  
    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);  

    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);  
    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);  
    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);  
    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);  
    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);  
    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);  
    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);  
    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);  
    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);  
    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);  
    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);  
    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);  
    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);  
    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);  
    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);  
    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);  

    a = safe_add(a, olda);  
    b = safe_add(b, oldb);  
    c = safe_add(c, oldc);  
    d = safe_add(d, oldd);  
  }  
  return Array(a, b, c, d);  
    
}  

/*  
 * These functions implement the four basic operations the algorithm uses.  
 */  
function md5_cmn(q, a, b, x, s, t)  
{  
  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);  
}  
function md5_ff(a, b, c, d, x, s, t)  
{  
  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);  
}  
function md5_gg(a, b, c, d, x, s, t)  
{  
  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);  
}  
function md5_hh(a, b, c, d, x, s, t)  
{  
  return md5_cmn(b ^ c ^ d, a, b, x, s, t);  
}  
function md5_ii(a, b, c, d, x, s, t)  
{  
  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);  
}  

/*  
 * Calculate the HMAC-MD5, of a key and some data  
 */  
function core_hmac_md5(key, data)  
{  
  var bkey = str2binl(key);  
  if(bkey.length > 16) bkey = core_md5(bkey, key.length * chrsz);  

  var ipad = Array(16), opad = Array(16);  
  for(var i = 0; i < 16; i++)   
  {  
    ipad[i] = bkey[i] ^ 0x36363636;  
    opad[i] = bkey[i] ^ 0x5C5C5C5C;  
  }  

  var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);  
  return core_md5(opad.concat(hash), 512 + 128);  
}  

/*  
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally  
 * to work around bugs in some JS interpreters.  
 */  
function safe_add(x, y)  
{  
  var lsw = (x & 0xFFFF) + (y & 0xFFFF);  
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);  
  return (msw << 16) | (lsw & 0xFFFF);  
}  

/*  
 * Bitwise rotate a 32-bit number to the left.  
 */  
function bit_rol(num, cnt)  
{  
  return (num << cnt) | (num >>> (32 - cnt));  
}  

/*  
 * Convert a string to an array of little-endian words  
 * If chrsz is ASCII, characters >255 have their hi-byte silently ignored.  
 */  
function str2binl(str)  
{  
  var bin = Array();  
  var mask = (1 << chrsz) - 1;  
  for(var i = 0; i < str.length * chrsz; i += chrsz)  
    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (i%32);  
  return bin;  
}  

/*  
 * Convert an array of little-endian words to a hex string.  
 */  
function binl2hex(binarray)  
{  
  var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";  
  var str = "";  
  for(var i = 0; i < binarray.length * 4; i++)  
  {  
    str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +  
           hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);  
  }  
  return str;  
}  

/*  
 * Convert an array of little-endian words to a base-64 string  
 */  
function binl2b64(binarray)  
{  
  var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";  
  var str = "";  
  for(var i = 0; i < binarray.length * 4; i += 3)  
  {  
    var triplet = (((binarray[i   >> 2] >> 8 * ( i   %4)) & 0xFF) << 16)  
                | (((binarray[i+1 >> 2] >> 8 * ((i+1)%4)) & 0xFF) << 8 )  
                |  ((binarray[i+2 >> 2] >> 8 * ((i+2)%4)) & 0xFF);  
    for(var j = 0; j < 4; j++)  
    {  
      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;  
      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);  
    }  
  }  
  return str;  
}  
</SCRIPT>
 <BR><BR>[MD5_16_a]：表示加密为[16]位的[MD5]密文..转换后的字母为小写<BR>[MD5_16_A]：表示加密为[16]位的[MD5]密文..转换后的字母为大写<BR>[MD5_32_a]：表示加密为[32]位的[MD5]密文..转换后的字母为小写<BR>[MD5_32_A]：表示加密为[32]位的[MD5]密文..转换后的字母为大写<BR><!-- MD5 在线加密代码结束 --><BR><BR>如果你要本页源代码，请点击右键，选择查看源代码，文本中有注释</font><br></td> 
    </tr> 
  </table></td> 
    </tr> 
    <tr> 
      <td width="780" height="26" align="center" bgcolor="#EFFBF7">　</td> 
    </tr> 
  </table> 
</center> 
</body>                                  
</html> 
